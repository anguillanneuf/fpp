library(devtools)
install_github("ramnathv/htmlwidgets")
install_github("smartinsightsfromdata/rpivotTable")
library(rpivotTable)
data(mtcars)
rpivotTable(mtcars, row="gear", col="cyl", aggregatorName = "Average", vals="mpg", rendererName="Treemap")
rm(list=ls())
require("fpp")
require("tseries")
?meaf
?meanf
meanf(y, h)
nile.fcast <- meanf(Nile, h=10)
nile.fcast[1]
str(nile.fcast)
plot(nile.fcast)
str(nile)
str(Nile)
str(Nile)
naive(y, h)
?naive
?rwf
beer2 <- window(ausbeer,start=1992,end=2006-.1)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
plot(beerfit2, color = 2, plot.conf=FALSE, main="Forest")
plot(beerfit2, cplot.conf=FALSE, main="Forest")
plot(beerfit2, plot.conf=FALSE, main="Forest")
beer2 <- window(ausbeer,start=1992,end=2006-.1)
beerfit1 <- meanf(beer2, h=11)
beerfit2 <- naive(beer2, h=11)
beerfit3 <- snaive(beer2, h=11)
plot(beerfit1, plot.conf=FALSE,
main="Forecasts for quarterly beer production")
lines(beerfit2$mean,col=2)
lines(beerfit3$mean,col=3)
legend("topright",lty=1,col=c(1,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
legend("topright",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Seasonal naive method"))
dj2 <- window(dj,end=250)
plot(dj2,main="Dow Jones Index (daily ending 15 Jul 94)",
ylab="",xlab="Day",xlim=c(2,290))
lines(meanf(dj2,h=42)$mean,col=4)
lines(rwf(dj2,h=42)$mean,col=2)
lines(rwf(dj2,drift=TRUE,h=42)$mean,col=3)
legend("topleft",lty=1,col=c(4,2,3),
legend=c("Mean method","Naive method","Drift method"))
legend("topleft", lty=2, col=c(4,2,3), legend = c("Mean", "Naive", "Drift"))
plot(log(elec), ylab="Transformed electricity demand",
xlab="Year", main="Transformed monthly electricity demand")
title(main="Log",line=-1)
plot(elec, ylab="Transformed electricity demand",
xlab="Year", main="Transformed monthly electricity demand")
title(main="Log",line=-1)
lambda <- BoxCox.lambda(elec) # = 0.27
plot(BoxCox(elec,lambda))
26 + (4*12)*(0:2)
plot(log(elec), ylab="Transformed electricity demand",
xlab="Year", main="Transformed monthly electricity demand")
title(main="Log",line=-1)
plot(BoxCox(elec, BoxCox.lambda(elec)), ylab="Transformed electricity demand",
xlab="Year", main="Transformed monthly electricity demand")
title(main="Log",line=-1)
head(elec)
BoxCox.lambda(head(elec))
BoxCox.lambda(elec)
?BoxCox
head(BoxCox(elec, BoxCox.lambda(elec)))
beer2 <- window(ausbeer,start=1992,end=2006-.1)
beerfit1 <- meanf(beer2,h=11)
beerfit2 <- rwf(beer2,h=11)
beerfit3 <- snaive(beer2,h=11)
beerfit1
beerfit2
?rwf
beerfit3
beer3 <- window(ausbeer, start=2006)
accuracy(beerfit1, beer3)
accuracy(beerfit2, beer3)
accuracy(beerfit3, beer3)
dj2 <- window(dj, end=250)
length(dj)
length(dj2)
?window
plot(dj2, main="Dow Jones Index (daily ending 15 Jul 94)",
ylab="", xlab="Day", xlim=c(2,290))
lines(meanf(dj2,h=42)$mean, col=4)
lines(rwf(dj2,h=42)$mean, col=2)
lines(rwf(dj2,drift=TRUE,h=42)$mean, col=3)
legend("topleft", lty=1, col=c(4,2,3),
legend=c("Mean method","Naive method","Drift method"))
lines(dj)
dj3 <- window(dj, start=251)
accuracy(meanf(dj2,h=42), dj3)
accuracy(rwf(dj2,h=42), dj3)
accuracy(rwf(dj2,drift=TRUE,h=42), dj3)
dj2 <- window(dj, end=250)
plot(dj2, main="Dow Jones Index (daily ending 15 Jul 94)",
ylab="", xlab="Day")
res <- residuals(naive(dj2))
plot(res, main="Residuals from naive method",
ylab="", xlab="Day")
Acf(res, main="ACF of residuals")
?Acf
hist(res, nclass="FD", main="Histogram of residuals")
?hist
hist(res, main="Histogram of residuals")
"FD"
q()
y()
q()
require("fpp")
require("fma")
rm(list=ls))
rm(list=ls())
require("fpp")
require("fma")
str(oildata)
oildata <- window(oil,start=1996,end=2007)
str(oildata)
plot(oildata, ylab="Oil (millions of tonnes)",xlab="Year")
fit1 <- ses(oildata, alpha=0.2, initial="simple", h=3)
fit2 <- ses(oildata, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oildata, h=3)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fit1$mean, col="blue", type="o")
fit1 <- ses(oildata, alpha=0.2, initial="simple", h=3)
fit2 <- ses(oildata, alpha=0.6, initial="simple", h=3)
fit3 <- ses(oildata, h=3)
plot(fit1, plot.conf=FALSE, ylab="Oil (millions of tonnes)",
xlab="Year", main="", fcol="white", type="o")
lines(fitted(fit1), col="blue", type="o")
lines(fitted(fit2), col="red", type="o")
lines(fitted(fit3), col="green", type="o")
lines(fit1$mean, col="blue", type="o")
lines(fit2$mean, col="red", type="o")
lines(fit3$mean, col="green", type="o")
legend("topleft",lty=1, col=c(1,"blue","red","green"),
c("data", expression(alpha == 0.2), expression(alpha == 0.6),
expression(alpha == 0.89)),pch=1)
?ses
setwd("./fpp/fpp1")
dir()
livestock2 <- window(livestock,start=1970,end=2000)
fit1 <- ses(livestock2)
fit2 <- holt(livestock2)
fit3 <- holt(livestock2,exponential=TRUE)
fit4 <- holt(livestock2,damped=TRUE)
fit5 <- holt(livestock2,exponential=TRUE,damped=TRUE)
# Results for first model:
fit1$model
accuracy(fit1) # training set
accuracy(fit1,livestock) # test set
aust <- window(austourists,start=2005)
fit1 <- hw(aust,seasonal="additive")
fit2 <- hw(aust,seasonal="multiplicative")
plot(fit2,ylab="International visitor night in Australia (millions)",
plot.conf=FALSE, type="o", fcol="white", xlab="Year")
lines(fitted(fit1), col="red", lty=2)
lines(fitted(fit2), col="green", lty=2)
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend("topleft",lty=1, pch=1, col=1:3,
c("data","Holt Winters' Additive","Holt Winters' Multiplicative"))
plot(plastics, xlim=c(1,7), ylim=c(600, 2000),
main="Prediction of monthly sales of plastics",
ylab="Sales", xlab="Year")
?est
?ets
fit <- ets(plastics)
plot(forecast(ets, h=12))
plot(forecast(ets))
plot(forecast(fit))
plot(fitted(fit))
?fitted
plot(plastics)
lines(fitted(fit), col="red")
x <- fitted(fit)
str(x)
fit
forecast(fit)
rm(list=ls())
q()
